.TH PARMFILE 3-local "94/05/16"
.SH NAME
parmfile - data structure for parameter passing
.SH COPYRIGHT
Copyright \(co 1993 University Corporation for Atmospheric Research
.LP
All Rights Reserved
.SH SYNOPSIS
.nf
.B #include """parmfile.h"""
.LP
.B int bundleparmfile(fd,parcelp)
.B int fd;
.B PARCEL *parcelp;
.LP
.B int unbundleparmfile(fd,parcel)
.B int fd;
.B PARCEL parcel;
.LP
.B int stuffparmfile(fd,portfolio)
.B int fd;
.B PORTFOLIO *portfolio;
.LP
.B int unstuffparmfile(fd,portfolio)
.B int fd;
.B PORTFOLIO *portfolio;
.fi
.SH DESCRIPTION
This module contains a set of functions which together provide a
mechanism for efficiently handling parameters under a variety of
circumstances. Parameters are in the form of keyword-value pairs, where
the unique keyword and its value are ASCII strings.  There are seven
complementary data structures: PARCEL, PACKAGE, PILE, PACKET,
PARMFILE, PORTFOLIO, and ARGVECTOR.
.LP
In the function signatures in the synopsis above, the formal parameters
have the following meanings.
.LP
.I parcel
is a variable which contains the pointer that is the root of the tree
that is the PARCEL data structure.
.LP
.I parcelp
is a value/result argument which is the address of a PARCEL variable
(i.e. &parcel).
.LP
.I portfolio
points to a PORTFOLIO data structure.
.LP
.I fd
is a UNIX file descriptor.
.LP
.B bundleparmfile
parses input from a file and bundles it into
.IR parcelp .
The syntax
of the file has one parameter per line in the form of
\fIkeyword\fR=\fIvalue\fR.
.LP
.B unbundleparmfile
unbundles (writes) the contents of
.I parcel
into a file in a format that can later be imported.
.LP
.B unstuffparmfile
and
.B stuffparmfile
are corresponding routines that deal with PORTFOLIOS instead of
PARCELS.
.SH "RETURN VALUES"
All functions which return a pointer return NULL when an error is
detected; errno is set appropriately. All functions which return
an integer return a negative number when an error is detected; errno
is set appropriately.
.LP
In the instances where a PARCEL is returned, NULL may also mean
that the PARCEL is empty, in which case errno is set to zero.
The PORTFOLIO functions have no such defect.
.SH ERRORS
Virtually the only errors which are returned are the following.
.TP 20
.SM EINVAL
An invalid argument, such as NULL where an address was expected, was
passed to the function.
.TP
.SM ENOMEM
Memory could not be allocated for the dynamic structures.
.LP
Other error numbers may result from the functions' use of the UNIX
standard I/O package.
.SH FILES
libtools.a
.SH "SEE ALSO"
.BR parcel (3l),
.BR portfolio (3l),
.BR package (3l),
.BR pile (3l),
.BR packet (3l),
.BR escapes (3l),
.BR nextparser (3l)
.SH VERSION
@(#)parmfile.3l	4.1 94/05/16 jsloan@ncar.ucar.edu
.SH AUTHOR
John Sloan, NCAR/SCD, P.O. Box 3000, Boulder CO 80307
